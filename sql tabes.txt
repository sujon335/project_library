
  CREATE TABLE "TABLE_1"."BOOK" 
   (	"BOOK_ID" NUMBER NOT NULL ENABLE, 
	"TITLE" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"EDITION" VARCHAR2(20 BYTE), 
	"AUTHOR" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"CATEGORY" VARCHAR2(50 BYTE), 
	"EXTENSION_NO" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"KEYWORD" VARCHAR2(50 BYTE), 
	"PUBLISHER" VARCHAR2(50 BYTE), 
	"SUPPLIER" VARCHAR2(50 BYTE), 
	 CONSTRAINT "BOOK_PK" PRIMARY KEY ("BOOK_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE, 
	 CONSTRAINT "BOOK_UK1" UNIQUE ("BOOK_ID", "EXTENSION_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;


  
  
  

  CREATE TABLE "TABLE_1"."LIBRARIAN" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"USERNAME" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"EMAIL" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"PASSWORD" VARCHAR2(40 BYTE) NOT NULL ENABLE, 
	 CONSTRAINT "LIBRARIAN_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

  
  
  CREATE TABLE "TABLE_1"."MEMBER" 
   (	"MEMBER_ID" NUMBER NOT NULL ENABLE, 
	"NAME" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"EMAIL" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"CONTACT" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"USERNAME" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"PASSWORD" VARCHAR2(40 BYTE) NOT NULL ENABLE, 
	"STATUS" NUMBER DEFAULT 0, 
	"LIBRARY_CARD_NO" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	 CONSTRAINT "MEMBER_PK" PRIMARY KEY ("MEMBER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE, 
	 CONSTRAINT "MEMBER_UK1" UNIQUE ("MEMBER_ID", "EMAIL", "USERNAME", "LIBRARY_CARD_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
  
  

  CREATE OR REPLACE TRIGGER "TABLE_1"."MEMBER_FINE" 
after update of status on MEMBER
for each row
 WHEN (new.status=1) declare
	member_id number;
begin
	
        member_id := :new.member_id;
	
      INSERT INTO FINES(ID,MEMBER_ID,FINE) VALUES (SEQ_USER.nextval,member_id,0);
		
end;
/
ALTER TRIGGER "TABLE_1"."MEMBER_FINE" ENABLE;
  
  
  
  
  
  
  
  

  CREATE TABLE "TABLE_1"."BOOKING_DATA" 
   (	"BOOKING_ID" NUMBER NOT NULL ENABLE, 
	"BOOK_ID" NUMBER NOT NULL ENABLE, 
	"MEMBER_ID" NUMBER NOT NULL ENABLE, 
	"BOOKING_DATE" DATE NOT NULL ENABLE, 
	"FINISHING_DATE" DATE NOT NULL ENABLE, 
	"TAKEN" NUMBER DEFAULT 0, 
	 CONSTRAINT "BOOKING_DATA_PK" PRIMARY KEY ("BOOKING_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE, 
	 CONSTRAINT "BOOKING_DATA_BOOK_FK1" FOREIGN KEY ("BOOK_ID")
	  REFERENCES "TABLE_1"."BOOK" ("BOOK_ID") ON DELETE CASCADE ENABLE, 
	 CONSTRAINT "BOOKING_DATA_MEMBER_FK1" FOREIGN KEY ("MEMBER_ID")
	  REFERENCES "TABLE_1"."MEMBER" ("MEMBER_ID") ON DELETE CASCADE ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;


  
  
  
  CREATE TABLE "TABLE_1"."FINES" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"MEMBER_ID" NUMBER NOT NULL ENABLE, 
	"FINE" NUMBER NOT NULL ENABLE, 
	 CONSTRAINT "FINES_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE, 
	 CONSTRAINT "FINES_MEMBER_FK1" FOREIGN KEY ("MEMBER_ID")
	  REFERENCES "TABLE_1"."MEMBER" ("MEMBER_ID") ON DELETE CASCADE ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;


  
  
  CREATE TABLE "TABLE_1"."ADVANCE_BOOKING" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"BOOKING_ID" NUMBER NOT NULL ENABLE, 
	"MEMBER_ID" NUMBER NOT NULL ENABLE, 
	"BOOKING_DATE" DATE NOT NULL ENABLE, 
	 CONSTRAINT "ADVANCE_BOOKING_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE, 
	 CONSTRAINT "ADVANCE_BOOKING_BOOKING_D_FK1" FOREIGN KEY ("BOOKING_ID")
	  REFERENCES "TABLE_1"."BOOKING_DATA" ("BOOKING_ID") ON DELETE CASCADE ENABLE, 
	 CONSTRAINT "ADVANCE_BOOKING_MEMBER_FK1" FOREIGN KEY ("MEMBER_ID")
	  REFERENCES "TABLE_1"."MEMBER" ("MEMBER_ID") ON DELETE CASCADE ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

  
  
  
  
  
  
  CREATE TABLE "TABLE_1"."BOOKING_EXTEND" 
   (	"ID" NUMBER NOT NULL ENABLE, 
	"BOOKING_ID" NUMBER NOT NULL ENABLE, 
	"EXTEND_DATE" DATE NOT NULL ENABLE, 
	 CONSTRAINT "BOOKING_EXTEND_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE, 
	 CONSTRAINT "BOOKING_EXTEND_BOOKING_DA_FK1" FOREIGN KEY ("BOOKING_ID")
	  REFERENCES "TABLE_1"."BOOKING_DATA" ("BOOKING_ID") ON DELETE CASCADE ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
  
  
  
  
  
  
  
   CREATE SEQUENCE  "TABLE_1"."SEQ_USER"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 51 CACHE 10 NOORDER  NOCYCLE ;

   
   
   
create or replace trigger member_fine
after update of status on MEMBER
for each row
when (new.status=1)
declare
	member_id number;
begin
	
        member_id := :new.member_id;
	
      INSERT INTO FINES(ID,MEMBER_ID,FINE) VALUES (SEQ_USER.nextval,member_id,0);
		
end;
/
  
  
  
  create or replace 
trigger del_adv_booking
after update of member_id on BOOKING_DATA
for each row
declare
	mem number;
  booking number;
begin
	
        mem := :new.member_id;
        booking:= :new.booking_id;
	
      DELETE FROM advance_booking WHERE member_id=mem AND booking_id=booking;
		
end;
  
  
  
  create or replace 
trigger check_tot_book_no
after insert or update on BOOKING_DATA
declare
	tot number;
begin
	
	for rec in (select * from MEMBER) loop
		select count(*) into tot
		from BOOKING_DATA
		where member_id = rec.member_id;
		if  tot > 4 then
			raise_application_error(-20003,'member cannot book more than 4 books');	
		end if;
	end loop;	
end;
  
  
  